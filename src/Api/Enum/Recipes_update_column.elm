-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.Recipes_update_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| update columns of table "recipes"

  - Cover\_image\_url - column name
  - Description - column name
  - Id - column name
  - Instructions - column name
  - Name - column name

-}
type Recipes_update_column
    = Cover_image_url
    | Description
    | Id
    | Instructions
    | Name


list : List Recipes_update_column
list =
    [ Cover_image_url, Description, Id, Instructions, Name ]


decoder : Decoder Recipes_update_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "cover_image_url" ->
                        Decode.succeed Cover_image_url

                    "description" ->
                        Decode.succeed Description

                    "id" ->
                        Decode.succeed Id

                    "instructions" ->
                        Decode.succeed Instructions

                    "name" ->
                        Decode.succeed Name

                    _ ->
                        Decode.fail ("Invalid Recipes_update_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Recipes_update_column -> String
toString enum =
    case enum of
        Cover_image_url ->
            "cover_image_url"

        Description ->
            "description"

        Id ->
            "id"

        Instructions ->
            "instructions"

        Name ->
            "name"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Recipes_update_column
fromString enumString =
    case enumString of
        "cover_image_url" ->
            Just Cover_image_url

        "description" ->
            Just Description

        "id" ->
            Just Id

        "instructions" ->
            Just Instructions

        "name" ->
            Just Name

        _ ->
            Nothing
